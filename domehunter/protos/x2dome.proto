// Protocol buffer interface for the TheSkyX X2 Dome interface,
// http://www.bisque.com/x2standard/class_x2_dome.html
syntax = "proto3";

import "google/protobuf/empty.proto";

service X2Dome {
  // Dome API
  rpc dapiGetAzEl (Empty) returns (AzEl);
  rpc dapiGotoAzEl (AzEl) returns (ReturnCode);
  rpc dapiAbort (Empty) returns (ReturnCode);
  rpc dapiOpen (Empty) returns (ReturnCode);
  rpc dapiClose (Empty) returns (ReturnCode);
  rpc dapiPark (Empty) returns (ReturnCode);
  rpc dapiUnpark (Empty) returns (ReturnCode);
  rpc dapiFindHome (Empty) returns (ReturnCode);
  rpc dapiGotoComplete (Empty) returns (IsComplete);
  rpc dapiOpenComplete (Empty) returns (IsComplete);
  rpc dapiCloseComplete (Empty) returns (IsComplete);
  rpc dapiParkComplete (Empty) returns (IsComplete);
  rpc dapiUnparkComplete (Empty) returns (IsComplete);
  rpc dapiFindHomeComplete (Empty) returns (IsComplete);
  rpc dapiSync (AzEl) returns (ReturnCode);
  // Hardware Info Interface
  rpc deviceInfoNameShort (Empty) returns (BasicString);
  rpc deviceInfoNameLong (Empty) returns (BasicString);
  rpc deviceInfoDetailedDescription (Empty) returns (BasicString);
  rpc deviceInfoFirmwareVersion (Empty) returns (BasicString);
  rpc deviceInfoModel (Empty) returns (BasicString);
}

message ReturnCode {
  // X2 Dome interface specifies plain `int`, but protocal buffers don't have a
  // corresponding type and on most platforms `int` is an alias for `int32`.
  int32 return_code = 1;
}

message AzEl {
  // When azimuth-elevation are returned return code will be defined, when being
  // passed as an argument there won't be.
  singular int32 return_code = 1;
  double az = 2;
  double el = 3;
}

message IsComplete {
  // The *Complete functions return a return code along with the boolean value.
  int32 return_code = 1;
  bool is_complete = 2;
}

message BasicString {
  // X2 had a class specifically for string output, BasicStringInferface
  string basic_string = 1;
}
