// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: hx2dome.proto

#include "hx2dome.pb.h"
#include "hx2dome.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace hx2dome {

static const char* HX2Dome_method_names[] = {
  "/hx2dome.HX2Dome/dapiGetAzEl",
  "/hx2dome.HX2Dome/dapiGotoAzEl",
  "/hx2dome.HX2Dome/dapiAbort",
  "/hx2dome.HX2Dome/dapiOpen",
  "/hx2dome.HX2Dome/dapiClose",
  "/hx2dome.HX2Dome/dapiPark",
  "/hx2dome.HX2Dome/dapiUnpark",
  "/hx2dome.HX2Dome/dapiFindHome",
  "/hx2dome.HX2Dome/dapiGotoComplete",
  "/hx2dome.HX2Dome/dapiOpenComplete",
  "/hx2dome.HX2Dome/dapiCloseComplete",
  "/hx2dome.HX2Dome/dapiParkComplete",
  "/hx2dome.HX2Dome/dapiUnparkComplete",
  "/hx2dome.HX2Dome/dapiFindHomeComplete",
  "/hx2dome.HX2Dome/dapiSync",
  "/hx2dome.HX2Dome/deviceInfoNameShort",
  "/hx2dome.HX2Dome/deviceInfoNameLong",
  "/hx2dome.HX2Dome/deviceInfoDetailedDescription",
  "/hx2dome.HX2Dome/deviceInfoFirmwareVersion",
  "/hx2dome.HX2Dome/deviceInfoModel",
};

std::unique_ptr< HX2Dome::Stub> HX2Dome::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< HX2Dome::Stub> stub(new HX2Dome::Stub(channel));
  return stub;
}

HX2Dome::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_dapiGetAzEl_(HX2Dome_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiGotoAzEl_(HX2Dome_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiAbort_(HX2Dome_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiOpen_(HX2Dome_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiClose_(HX2Dome_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiPark_(HX2Dome_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiUnpark_(HX2Dome_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiFindHome_(HX2Dome_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiGotoComplete_(HX2Dome_method_names[8], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiOpenComplete_(HX2Dome_method_names[9], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiCloseComplete_(HX2Dome_method_names[10], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiParkComplete_(HX2Dome_method_names[11], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiUnparkComplete_(HX2Dome_method_names[12], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiFindHomeComplete_(HX2Dome_method_names[13], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dapiSync_(HX2Dome_method_names[14], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_deviceInfoNameShort_(HX2Dome_method_names[15], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_deviceInfoNameLong_(HX2Dome_method_names[16], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_deviceInfoDetailedDescription_(HX2Dome_method_names[17], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_deviceInfoFirmwareVersion_(HX2Dome_method_names[18], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_deviceInfoModel_(HX2Dome_method_names[19], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status HX2Dome::Stub::dapiGetAzEl(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::AzEl* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiGetAzEl_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiGetAzEl(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::AzEl* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiGetAzEl_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiGetAzEl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::AzEl* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiGetAzEl_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::AzEl>* HX2Dome::Stub::AsyncdapiGetAzElRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::AzEl>::Create(channel_.get(), cq, rpcmethod_dapiGetAzEl_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::AzEl>* HX2Dome::Stub::PrepareAsyncdapiGetAzElRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::AzEl>::Create(channel_.get(), cq, rpcmethod_dapiGetAzEl_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiGotoAzEl(::grpc::ClientContext* context, const ::hx2dome::AzEl& request, ::hx2dome::ReturnCode* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiGotoAzEl_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiGotoAzEl(::grpc::ClientContext* context, const ::hx2dome::AzEl* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiGotoAzEl_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiGotoAzEl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiGotoAzEl_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::AsyncdapiGotoAzElRaw(::grpc::ClientContext* context, const ::hx2dome::AzEl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiGotoAzEl_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::PrepareAsyncdapiGotoAzElRaw(::grpc::ClientContext* context, const ::hx2dome::AzEl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiGotoAzEl_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiAbort(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::ReturnCode* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiAbort_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiAbort(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiAbort_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiAbort(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiAbort_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::AsyncdapiAbortRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiAbort_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::PrepareAsyncdapiAbortRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiAbort_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiOpen(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::ReturnCode* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiOpen_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiOpen(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiOpen_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiOpen(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiOpen_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::AsyncdapiOpenRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiOpen_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::PrepareAsyncdapiOpenRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiOpen_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiClose(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::ReturnCode* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiClose_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiClose(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiClose_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiClose(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiClose_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::AsyncdapiCloseRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiClose_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::PrepareAsyncdapiCloseRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiClose_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiPark(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::ReturnCode* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiPark_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiPark(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiPark_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiPark(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiPark_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::AsyncdapiParkRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiPark_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::PrepareAsyncdapiParkRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiPark_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiUnpark(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::ReturnCode* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiUnpark_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiUnpark(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiUnpark_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiUnpark(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiUnpark_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::AsyncdapiUnparkRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiUnpark_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::PrepareAsyncdapiUnparkRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiUnpark_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiFindHome(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::ReturnCode* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiFindHome_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiFindHome(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiFindHome_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiFindHome(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiFindHome_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::AsyncdapiFindHomeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiFindHome_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::PrepareAsyncdapiFindHomeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiFindHome_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiGotoComplete(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::IsComplete* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiGotoComplete_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiGotoComplete(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::IsComplete* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiGotoComplete_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiGotoComplete(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::IsComplete* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiGotoComplete_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::IsComplete>* HX2Dome::Stub::AsyncdapiGotoCompleteRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::IsComplete>::Create(channel_.get(), cq, rpcmethod_dapiGotoComplete_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::IsComplete>* HX2Dome::Stub::PrepareAsyncdapiGotoCompleteRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::IsComplete>::Create(channel_.get(), cq, rpcmethod_dapiGotoComplete_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiOpenComplete(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::IsComplete* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiOpenComplete_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiOpenComplete(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::IsComplete* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiOpenComplete_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiOpenComplete(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::IsComplete* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiOpenComplete_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::IsComplete>* HX2Dome::Stub::AsyncdapiOpenCompleteRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::IsComplete>::Create(channel_.get(), cq, rpcmethod_dapiOpenComplete_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::IsComplete>* HX2Dome::Stub::PrepareAsyncdapiOpenCompleteRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::IsComplete>::Create(channel_.get(), cq, rpcmethod_dapiOpenComplete_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiCloseComplete(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::IsComplete* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiCloseComplete_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiCloseComplete(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::IsComplete* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiCloseComplete_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiCloseComplete(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::IsComplete* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiCloseComplete_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::IsComplete>* HX2Dome::Stub::AsyncdapiCloseCompleteRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::IsComplete>::Create(channel_.get(), cq, rpcmethod_dapiCloseComplete_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::IsComplete>* HX2Dome::Stub::PrepareAsyncdapiCloseCompleteRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::IsComplete>::Create(channel_.get(), cq, rpcmethod_dapiCloseComplete_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiParkComplete(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::IsComplete* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiParkComplete_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiParkComplete(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::IsComplete* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiParkComplete_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiParkComplete(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::IsComplete* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiParkComplete_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::IsComplete>* HX2Dome::Stub::AsyncdapiParkCompleteRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::IsComplete>::Create(channel_.get(), cq, rpcmethod_dapiParkComplete_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::IsComplete>* HX2Dome::Stub::PrepareAsyncdapiParkCompleteRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::IsComplete>::Create(channel_.get(), cq, rpcmethod_dapiParkComplete_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiUnparkComplete(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::IsComplete* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiUnparkComplete_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiUnparkComplete(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::IsComplete* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiUnparkComplete_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiUnparkComplete(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::IsComplete* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiUnparkComplete_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::IsComplete>* HX2Dome::Stub::AsyncdapiUnparkCompleteRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::IsComplete>::Create(channel_.get(), cq, rpcmethod_dapiUnparkComplete_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::IsComplete>* HX2Dome::Stub::PrepareAsyncdapiUnparkCompleteRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::IsComplete>::Create(channel_.get(), cq, rpcmethod_dapiUnparkComplete_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiFindHomeComplete(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::IsComplete* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiFindHomeComplete_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiFindHomeComplete(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::IsComplete* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiFindHomeComplete_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiFindHomeComplete(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::IsComplete* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiFindHomeComplete_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::IsComplete>* HX2Dome::Stub::AsyncdapiFindHomeCompleteRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::IsComplete>::Create(channel_.get(), cq, rpcmethod_dapiFindHomeComplete_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::IsComplete>* HX2Dome::Stub::PrepareAsyncdapiFindHomeCompleteRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::IsComplete>::Create(channel_.get(), cq, rpcmethod_dapiFindHomeComplete_, context, request, false);
}

::grpc::Status HX2Dome::Stub::dapiSync(::grpc::ClientContext* context, const ::hx2dome::AzEl& request, ::hx2dome::ReturnCode* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_dapiSync_, context, request, response);
}

void HX2Dome::Stub::experimental_async::dapiSync(::grpc::ClientContext* context, const ::hx2dome::AzEl* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiSync_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::dapiSync(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::ReturnCode* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_dapiSync_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::AsyncdapiSyncRaw(::grpc::ClientContext* context, const ::hx2dome::AzEl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiSync_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::ReturnCode>* HX2Dome::Stub::PrepareAsyncdapiSyncRaw(::grpc::ClientContext* context, const ::hx2dome::AzEl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::ReturnCode>::Create(channel_.get(), cq, rpcmethod_dapiSync_, context, request, false);
}

::grpc::Status HX2Dome::Stub::deviceInfoNameShort(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::BasicString* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_deviceInfoNameShort_, context, request, response);
}

void HX2Dome::Stub::experimental_async::deviceInfoNameShort(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::BasicString* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_deviceInfoNameShort_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::deviceInfoNameShort(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::BasicString* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_deviceInfoNameShort_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::BasicString>* HX2Dome::Stub::AsyncdeviceInfoNameShortRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::BasicString>::Create(channel_.get(), cq, rpcmethod_deviceInfoNameShort_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::BasicString>* HX2Dome::Stub::PrepareAsyncdeviceInfoNameShortRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::BasicString>::Create(channel_.get(), cq, rpcmethod_deviceInfoNameShort_, context, request, false);
}

::grpc::Status HX2Dome::Stub::deviceInfoNameLong(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::BasicString* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_deviceInfoNameLong_, context, request, response);
}

void HX2Dome::Stub::experimental_async::deviceInfoNameLong(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::BasicString* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_deviceInfoNameLong_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::deviceInfoNameLong(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::BasicString* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_deviceInfoNameLong_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::BasicString>* HX2Dome::Stub::AsyncdeviceInfoNameLongRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::BasicString>::Create(channel_.get(), cq, rpcmethod_deviceInfoNameLong_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::BasicString>* HX2Dome::Stub::PrepareAsyncdeviceInfoNameLongRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::BasicString>::Create(channel_.get(), cq, rpcmethod_deviceInfoNameLong_, context, request, false);
}

::grpc::Status HX2Dome::Stub::deviceInfoDetailedDescription(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::BasicString* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_deviceInfoDetailedDescription_, context, request, response);
}

void HX2Dome::Stub::experimental_async::deviceInfoDetailedDescription(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::BasicString* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_deviceInfoDetailedDescription_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::deviceInfoDetailedDescription(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::BasicString* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_deviceInfoDetailedDescription_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::BasicString>* HX2Dome::Stub::AsyncdeviceInfoDetailedDescriptionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::BasicString>::Create(channel_.get(), cq, rpcmethod_deviceInfoDetailedDescription_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::BasicString>* HX2Dome::Stub::PrepareAsyncdeviceInfoDetailedDescriptionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::BasicString>::Create(channel_.get(), cq, rpcmethod_deviceInfoDetailedDescription_, context, request, false);
}

::grpc::Status HX2Dome::Stub::deviceInfoFirmwareVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::BasicString* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_deviceInfoFirmwareVersion_, context, request, response);
}

void HX2Dome::Stub::experimental_async::deviceInfoFirmwareVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::BasicString* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_deviceInfoFirmwareVersion_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::deviceInfoFirmwareVersion(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::BasicString* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_deviceInfoFirmwareVersion_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::BasicString>* HX2Dome::Stub::AsyncdeviceInfoFirmwareVersionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::BasicString>::Create(channel_.get(), cq, rpcmethod_deviceInfoFirmwareVersion_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::BasicString>* HX2Dome::Stub::PrepareAsyncdeviceInfoFirmwareVersionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::BasicString>::Create(channel_.get(), cq, rpcmethod_deviceInfoFirmwareVersion_, context, request, false);
}

::grpc::Status HX2Dome::Stub::deviceInfoModel(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::hx2dome::BasicString* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_deviceInfoModel_, context, request, response);
}

void HX2Dome::Stub::experimental_async::deviceInfoModel(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::hx2dome::BasicString* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_deviceInfoModel_, context, request, response, std::move(f));
}

void HX2Dome::Stub::experimental_async::deviceInfoModel(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::hx2dome::BasicString* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_deviceInfoModel_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::hx2dome::BasicString>* HX2Dome::Stub::AsyncdeviceInfoModelRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::BasicString>::Create(channel_.get(), cq, rpcmethod_deviceInfoModel_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::hx2dome::BasicString>* HX2Dome::Stub::PrepareAsyncdeviceInfoModelRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::hx2dome::BasicString>::Create(channel_.get(), cq, rpcmethod_deviceInfoModel_, context, request, false);
}

HX2Dome::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::AzEl>(
          std::mem_fn(&HX2Dome::Service::dapiGetAzEl), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::hx2dome::AzEl, ::hx2dome::ReturnCode>(
          std::mem_fn(&HX2Dome::Service::dapiGotoAzEl), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::ReturnCode>(
          std::mem_fn(&HX2Dome::Service::dapiAbort), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::ReturnCode>(
          std::mem_fn(&HX2Dome::Service::dapiOpen), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::ReturnCode>(
          std::mem_fn(&HX2Dome::Service::dapiClose), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::ReturnCode>(
          std::mem_fn(&HX2Dome::Service::dapiPark), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::ReturnCode>(
          std::mem_fn(&HX2Dome::Service::dapiUnpark), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::ReturnCode>(
          std::mem_fn(&HX2Dome::Service::dapiFindHome), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::IsComplete>(
          std::mem_fn(&HX2Dome::Service::dapiGotoComplete), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::IsComplete>(
          std::mem_fn(&HX2Dome::Service::dapiOpenComplete), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::IsComplete>(
          std::mem_fn(&HX2Dome::Service::dapiCloseComplete), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::IsComplete>(
          std::mem_fn(&HX2Dome::Service::dapiParkComplete), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::IsComplete>(
          std::mem_fn(&HX2Dome::Service::dapiUnparkComplete), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::IsComplete>(
          std::mem_fn(&HX2Dome::Service::dapiFindHomeComplete), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::hx2dome::AzEl, ::hx2dome::ReturnCode>(
          std::mem_fn(&HX2Dome::Service::dapiSync), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::BasicString>(
          std::mem_fn(&HX2Dome::Service::deviceInfoNameShort), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[16],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::BasicString>(
          std::mem_fn(&HX2Dome::Service::deviceInfoNameLong), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[17],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::BasicString>(
          std::mem_fn(&HX2Dome::Service::deviceInfoDetailedDescription), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[18],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::BasicString>(
          std::mem_fn(&HX2Dome::Service::deviceInfoFirmwareVersion), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      HX2Dome_method_names[19],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< HX2Dome::Service, ::google::protobuf::Empty, ::hx2dome::BasicString>(
          std::mem_fn(&HX2Dome::Service::deviceInfoModel), this)));
}

HX2Dome::Service::~Service() {
}

::grpc::Status HX2Dome::Service::dapiGetAzEl(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::AzEl* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiGotoAzEl(::grpc::ServerContext* context, const ::hx2dome::AzEl* request, ::hx2dome::ReturnCode* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiAbort(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::ReturnCode* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiOpen(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::ReturnCode* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiClose(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::ReturnCode* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiPark(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::ReturnCode* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiUnpark(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::ReturnCode* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiFindHome(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::ReturnCode* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiGotoComplete(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::IsComplete* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiOpenComplete(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::IsComplete* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiCloseComplete(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::IsComplete* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiParkComplete(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::IsComplete* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiUnparkComplete(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::IsComplete* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiFindHomeComplete(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::IsComplete* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::dapiSync(::grpc::ServerContext* context, const ::hx2dome::AzEl* request, ::hx2dome::ReturnCode* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::deviceInfoNameShort(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::BasicString* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::deviceInfoNameLong(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::BasicString* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::deviceInfoDetailedDescription(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::BasicString* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::deviceInfoFirmwareVersion(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::BasicString* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status HX2Dome::Service::deviceInfoModel(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::hx2dome::BasicString* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace hx2dome

