Huntsman Telescope dome control
===============================

.. image:: http://img.shields.io/badge/powered%20by-AstroPy-orange.svg?style=flat
    :target: http://www.astropy.org
    :alt: Powered by Astropy Badge

Code to run the Huntsman Telescope dome control hardware

Overview
--------

The Huntsman Telescope dome control software has two components,
one written in c++ the other in python.

The C++ component is a X2Dome driver that interfaces with TheSkyX
and passes commands through to the python component. This is done
using the `gRPC <https://grpc.io/>`_ framework, allowing the c++
component to pass infomation to the python component.

The python component is implemented on a raspberry pi that controls
the dome rotation motor. It controls the activation of the motor
and tracks the dome position using an encoder. It returns infomation
(such as dome position) to the c++ component using gRPC as well.

The c++ code is built around Software Bisque's X2 standard. For more
infomation on this `see here <https://www.bisque.com/x2standard/class_x2_dome.html#a7ffd792950cdd0abe1b022e7a8caff9e>`.

C++/gRPC Component
==================

Requirements
---------------

``grpc python`` See instructions `here <https://grpc.io/docs/quickstart/python/>`_.


``grpc c++`` See instructions `here <https://grpc.io/docs/quickstart/cpp/>`_.

To install the above on OSX, run:

``
pip install --upgrade pip
pip install grpcio
brew install protobuf-c
brew install grpc
``

Getting Started
---------------

The files for compilation and installation are found in the
``domehunter/protos/`` directory. The relevant files are,


* ``domelistHuntsmanDome.txt``
* ``TheSkyX_plugin_install.sh``
* ``Makefile``

The first two are files are used to install the compiled c++
driver. You should be able to simply run the shell script once
the driver is compiled and located in the ``domehunter/protos/``
directory, with filename ``libHuntsmanDome.so``.

|

In order to compile the driver simply run the makefile recipe.

|

Once the driver is installed in TheSkyX, it can be selected from
the dome selection menu. Before issuing any commands, start the
``domehunter/protos/src/hx2dome.proto_server.py`` in a new terminal.
When you issue a command through TheSkyX, the c++ driver will send
a remote procedure call through to the gRPC python server. Currently
the server will just return a dummy response to the c++ driver,
which will be passed to TheSkyX. In the future the gRPC python server
will be used to issue commands to the dome hardware.

gRPC automatically generated files
----------------------------------

In the ``domehunter/protos/`` directory there are a number of shell
scripts. These can be used to generate the gRPC files within the ``src/``
directory. These scripts contain path variables that may need to be
adjusted to your local machine. You shouldn't need to worry about
this as the generated files are committed to the repositry and
shouldn't need to be generated.

The code for the Huntsman dome driver is contained in the
``domehunter/protos/src`` directory. This directory contains both
human written files and files automatically generated by gRPC
tools. The human written files are,

* ``main.cpp``
* ``main.h``
* ``x2dome.cpp``
* ``x2dome.h``
* ``hx2dome.proto``
* ``hx2dome.proto_server.py``

The remaining cpp and python files are automatically produced
by gRPC and shouldn't need to be looked at. If for some reason
you want to generate these files yourself, see the
*gRPC automatically generated files* section below.


Python RaspberryPi Component
============================

Requirements
---------------
Required:

* ``gpiozero`` python library

Optional:

* ``smbus`` and ``sn3218`` python libraries

Note:

The ``smbus`` and ``sn3218`` are used to control the automationHAT status
LEDs. If you plan on running the code without the automationHAT these libraries
aren't required.

Getting Started
---------------
Follow the example jupyter notebook in the examples direction
(``dome_control_example``). The automationHAT hardware is not required to run the
code in testing mode.


License
-------

This project is Copyright (c) Huntsman Team and licensed under
the terms of the BSD 3-Clause license. This package is based upon
the `Astropy package template <https://github.com/astropy/package-template>`_
which is licensed under the BSD 3-clause licence. See the licenses folder for
more information.
